===============
Variables
===============

x
xyz
x1
y1z1
x_1 x_2 y_200

---

(program
  (expression (variable))
  (expression (apply (apply (variable) (variable)) (variable)))
  (expression (numbered_variable))
  (expression (apply (numbered_variable) (numbered_variable)))
  (expression (apply (apply (numbered_variable) (numbered_variable)) (numbered_variable))))

===============
Named variables
===============

True
False
True False

---

(program
  (expression (named_variable))
  (expression (named_variable))
  (expression (apply (named_variable) (named_variable))))

===============
Lambda's
===============

\x.x
\y -> y
λy.y
LAMBDA z -> z
Lambda e_1 -> e_1
lambda e_2 . e_2

---

(program
  (expression (function (bound_variables (variable)) (func_body (variable))))
  (expression (function (bound_variables (variable)) (func_body (variable))))
  (expression (function (bound_variables (variable)) (func_body (variable))))
  (expression (function (bound_variables (variable)) (func_body (variable))))
  (expression (function (bound_variables (numbered_variable)) (func_body (numbered_variable))))
  (expression (function (bound_variables (numbered_variable)) (func_body (numbered_variable)))))

===============
Groups
===============

(x)
(x(y)z)
x(y(z(w))(p((q))))

---

(program
  (expression (group
    (variable)))
  (expression (group
    (apply (apply (variable) (group
      (variable))) (variable))))
  (expression (apply (variable) (group
    (apply (apply (variable) (group
      (apply (variable) (group (variable))))) (group
      (apply (variable) (group (group (variable))))))))))

===============
Various expressions
===============

\x -> x y
\x.x(\y.y)
(\x . x)(\y . y)

---

(program
  (expression (function
    (bound_variables (variable))
    (func_body (apply (variable) (variable)))))
  (expression (function
    (bound_variables (variable))
    (func_body (apply (variable) (group
      (function
        (bound_variables (variable))
        (func_body (variable))))))))
  (expression (apply
    (group
      (function
        (bound_variables (variable))
        (func_body (variable))))
    (group
      (function
        (bound_variables (variable))
        (func_body (variable)))))))

===============
Line comment
===============

-- This is a comment

---

(program (comment))

===============
Multiline comment
===============

"""
This is a
multiline
comment
"""

---

(program (comment))


===============
Beta replacement
===============

( λy . x (x y) ) [ λy . False <- x ] True

---

(program
  (expression
    (apply
      (beta_replacement
        (group
          (function
            (bound_variables (variable))
            (func_body
              (apply
                (variable)
                (group
                  (apply
                    (variable)
                    (variable)))))))
        (repl_def
          (function
            (bound_variables (variable))
            (func_body (named_variable)))
          (replace_operator)
          (variable)))
      (named_variable))))
