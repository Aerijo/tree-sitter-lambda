-- True w
(λx.λy.x)w
=> λy.w
=> w

-- Y combinator
λf.(λx.f(x x))(λx.f(x x))

-- 2 (Church)
λx.λy.x (x y)

-- Succ (Church)
λz.λx.λy.x(z x y)

-- isZero (Church)
λz.z(λy.False)True

-- isZero 2
(λz.z(λy.False)True) 2
=> 2 (λy.False) True
=> (λx.λy. x (x y)) (λy.False) True
=> (λy.(λy.False) ((λy.False) y)) True
== (λy.(λz.False) ((λw.False) y)) True
=> (λz.False) ((λw.False) True)
=> False

-- isZero 0
(λz.z(λy.False)True) 0
=> 0 (λy.False) True
=> False (λy.False) True
=> True
